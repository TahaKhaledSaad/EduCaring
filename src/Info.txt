Speakers Profiles:
  - kiyoxi7092@azduan.com
  - czpwcfnnyokzuxxbec@cwmxc.com -> Taha Kh. Saad

Users Profiles:
  - fasedo1128@dovesilo.com
  - maxoleg775@cmheia.com
  - mogojo1581@cmheia.com
  - bevot55705@azduan.com
  - fikoni2089@fryshare.com









// const handleSaveClick = () => {
  //   setIsEditMode(false);
  //   // Assuming user is an object containing the data mentioned in your question

  //   // Create a new FormData object
  //   const formData = new FormData();

  //   // Append each key-value pair to the formData object
  //   formData.append("PhoneNumber", "55512125215225221");
  //   formData.append("UserId", "");
  //   formData.append("Email", "");
  //   formData.append("NameAr", "");
  //   formData.append("NameEn", "");
  //   formData.append("GenderId", "");
  //   formData.append("ProfileImage", "");
  //   formData.append("ProfileImageFile", "");
  //   formData.append("DateOfBirth", "");
  //   formData.append("City", "");
  //   formData.append("Country", "");
  //   formData.append("Specialization", "");
  //   formData.append("SpecializationCategoryId", "");
  //   formData.append("PassportNumber", "");
  //   formData.append("HealthAuthorityNumber", "");
  //   formData.append("PassportImageFile", "");
  //   formData.append("CvFile", "");
  //   formData.append("WalaaCarFile", "");
  //   formData.append("Bio", "");
  //   formData.append("CurrentWorkPlace", "");
  //   formData.append("BankAccount", "");
  //   formData.append("SaudiAuthorityNumber", "");
  //   formData.append("ExpYears", "");

  //   // formData.append("PhoneNumber", user.phoneNumber);
  //   // formData.append("UserId", user.id);
  //   // formData.append("Email", user.email);
  //   // formData.append("NameAr", user.nameAr);
  //   // formData.append("NameEn", user.nameEn);
  //   // formData.append("GenderId", user.genderId);
  //   // formData.append("ProfileImage", user.profileImage);
  //   // formData.append("ProfileImageFile", user.displayProfileImage);
  //   // formData.append("DateOfBirth", user.dateOfBirth);
  //   // formData.append("City", user.city);
  //   // formData.append("Country", user.country);
  //   // formData.append("Specialization", user.specialization);
  //   // formData.append("SpecializationCategoryId", user.specializationCategoryId);
  //   // formData.append("PassportNumber", user.passportNumber);
  //   // formData.append("HealthAuthorityNumber", user.healthAuthorityNumber);
  //   // formData.append("PassportImageFile", user.displayPassportImageURL);
  //   // formData.append("CvFile", user.cvURL);
  //   // formData.append("WalaaCarFile", user.walaaCardURL);
  //   // formData.append("Bio", user.bio);
  //   // formData.append("CurrentWorkPlace", user.currentWorkPlace);
  //   // formData.append("BankAccount", user.bankAccount);
  //   // formData.append("SaudiAuthorityNumber", user.saudiAuthorityNumber);
  //   // formData.append("ExpYears", user.expYears);

  //   // Now formData contains all the key-value pairs

  //   axios
  //     .put(`${BASE}/Auth/UpdateProfile`, formData, {
  //       headers: {
  //         "Content-Type": "application/json",
  //         Accept: "text/plain",
  //       },
  //     })
  //     .then((data) => {
  //       console.log("From Put Request:");
  //       console.log(data);
  //     })
  //     .catch((err) => console.log(err));
  // };














  
    // formData.append("PhoneNumber", user.phoneNumber);
    // formData.append("UserId", user.id);
    // formData.append("Email", user.email);
    // formData.append("NameAr", user.nameAr);
    // formData.append("NameEn", user.nameEn);
    // formData.append("GenderId", user.genderId);
    // formData.append("ProfileImage", user.profileImage);
    // formData.append("ProfileImageFile", user.displayProfileImage);
    // formData.append("DateOfBirth", user.dateOfBirth);
    // formData.append("City", user.city);
    // formData.append("Country", user.country);
    // formData.append("Specialization", user.specialization);
    // formData.append("SpecializationCategoryId", user.specializationCategoryId);
    // formData.append("PassportNumber", user.passportNumber);
    // formData.append("HealthAuthorityNumber", user.healthAuthorityNumber);
    // formData.append("PassportImageFile", user.displayPassportImageURL);
    // formData.append("CvFile", user.cvURL);
    // formData.append("WalaaCarFile", user.walaaCardURL);
    // formData.append("Bio", user.bio);
    // formData.append("CurrentWorkPlace", user.currentWorkPlace);
    // formData.append("BankAccount", user.bankAccount);
    // formData.append("SaudiAuthorityNumber", user.saudiAuthorityNumber);
    // formData.append("ExpYears", user.expYears);











  const updatedUserData = {
    PhoneNumber: user.phoneNumber,
    UserId: user.id,
    Email: user.email,
    NameAr: user.nameAr,
    NameEn: user.nameEn,
    GenderId: user.genderId,
    ProfileImage: user.profileImage,
    ProfileImageFile: user.displayProfileImage,
    DateOfBirth: user.dateOfBirth,
    City: user.city,
    Country: user.country,
    Specialization: user.specialization,
    SpecializationCategoryId: user.specializationCategoryId,
    PassportNumber: user.passportNumber,
    HealthAuthorityNumber: user.healthAuthorityNumber,
    PassportImageFile: user.displayPassportImageURL,
    CvFile: user.cvURL,
    WalaaCarFile: user.walaaCardURL,
    Bio: user.bio,
    CurrentWorkPlace: user.currentWorkPlace,
    BankAccount: user.bankAccount,
    SaudiAuthorityNumber: user.saudiAuthorityNumber,
    ExpYears: user.expYears,
  };

  console.log("updatedUserData");
  console.log(updatedUserData);
























import upload from "./../../../assets/image.png";
import pdf from "./../../../assets/pdf.png";



  // [8] Handle Delete Image
  const handleDeleteImage = (imageType) => {
    setUser({
      ...user,
      [imageType]: "",
    });
  };

  // [6] Handle Upload Change
  const handleUploadChange = (e, fileType) => {
    const file = e.target.files[0];
    if (file) {
      setUser({
        ...user,
        [fileType]: file, // Set the file directly
      });
    }
  };


  <div className="speaker-uploads">
            <div className=" my-5 d-flex justify-content-center justify-content-xl-between flex-wrap gap-3">
              <div className="elem">
                <div className="text-muted my-2">
                  <i className="fas fa-arrow-up border border-secondary rounded fa-xs p-2 "></i>{" "}
                  upload Wlaa Card <div className="text-danger d-inline">(not required)</div>
                </div>
                <div
                  className="input-group"
                  style={{ display: user.WalaaCarFile ? "none" : "block" }}
                >
                  <input
                    type="file"
                    className="form-control"
                    id="WlaaCard"
                    onChange={(e) => handleUploadChange(e, "WalaaCarFile")}
                    hidden
                  />
                  <label
                    className="input-group-box d-flex flex-column align-items-center border px-5 text-muted py-5 rounded fs-5"
                    htmlFor="WlaaCard"
                  >
                    <img src={upload} alt="upload files" width="80px" />
                    <div className="text-center my-0">
                      Drag and Drop image <p className="text-info d-inline">here</p>
                    </div>
                    <div className="text-center my-0">
                      or <p className="text-info d-inline text-decoration-down">upload</p> image
                    </div>
                  </label>
                </div>
                {/* After Uploading */}
                {user.WalaaCarFile && (
                  <div
                    className="upload-container"
                    style={{
                      display: user.WalaaCarFile ? "block" : "none",
                      width: "300px",
                      height: "230px",
                      border: "1px solid #dcdcdc",
                      borderRadius: "5px",
                      position: "relative",
                      overflow: "hidden",
                      paddingTop: "30px",
                    }}
                  >
                    <div className="d-flex justify-content-center gap-3 align-items-center px-3">
                      <img src={pdf} alt="Wlaa Card" width="80px" />
                      <div>
                        <p className="p-0 m-0 my-1 fs-5">{user.WalaaCarFile.name}</p>
                        <p className="p-0 m-0 my-1 text-muted">
                          {user.WalaaCarFile.size > 1024 * 1024
                            ? `${(user.WalaaCarFile.size / (1024 * 1024)).toFixed(2)} MB`
                            : `${(user.WalaaCarFile.size / 1024).toFixed(2)} KB`}
                        </p>
                      </div>
                      <button
                        type="button"
                        className="btn btn-danger btn-sm py-3 w-100 rounded-0"
                        style={{ position: "absolute", bottom: "0" }}
                        onClick={() => handleDeleteImage("WalaaCarFile")}
                      >
                        <i className="fas fa-trash-alt fa-2xl"></i>
                      </button>
                    </div>
                  </div>
                )}
              </div>

              <div className="elem">
                <div className="text-muted my-2">
                  <i className="fas fa-arrow-up border border-secondary rounded fa-xs p-2 "></i>{" "}
                  upload passport photo
                </div>
                <div
                  className="input-group"
                  style={{
                    display: user.PassportImageFile ? "none" : "block",
                  }}
                >
                  <input
                    type="file"
                    className="form-control"
                    id="PassportImage"
                    onChange={(e) => handleUploadChange(e, "PassportImageFile")}
                    hidden
                  />
                  <label
                    className="input-group-box d-flex flex-column align-items-center border px-5 text-muted py-5 rounded fs-5"
                    htmlFor="PassportImage"
                  >
                    <img src={upload} alt="upload files" width="80px" />
                    <div className="text-center my-0">
                      Drag and Drop image <p className="text-info d-inline">here</p>
                    </div>
                    <div className="text-center my-0">
                      or <p className="text-info d-inline text-decoration-down">upload</p> image
                    </div>
                  </label>
                </div>
                {/* After Uploading */}
                {user.PassportImageFile && (
                  <div
                    style={{
                      display: user.PassportImageFile ? "block" : "none",
                      width: "300px",
                      height: "230px",
                      backgroundImage: `url(${URL.createObjectURL(user.PassportImageFile)})`,
                      backgroundSize: "cover",
                      backgroundPosition: "center",
                      backgroundRepeat: "no-repeat",
                      position: "relative",
                      borderRadius: "5px",
                      overflow: "hidden",
                    }}
                  >
                    <button
                      type="button"
                      className="btn btn-danger btn-sm py-3 w-100 rounded-0"
                      style={{ position: "absolute", bottom: "0" }}
                      onClick={() => handleDeleteImage("PassportImageFile")}
                    >
                      <i className="fas fa-trash-alt fa-2xl"></i>
                    </button>
                  </div>
                )}
              </div>

              <div className="elem">
                <div className="text-muted my-2">
                  <i className="fas fa-arrow-up border border-secondary rounded fa-xs p-2 "></i>{" "}
                  upload cv
                </div>
                <div className="input-group" style={{ display: user.CvFile ? "none" : "block" }}>
                  <input
                    type="file"
                    className="form-control"
                    id="CvFile"
                    onChange={(e) => handleUploadChange(e, "CvFile")}
                    hidden
                  />
                  <label
                    className="input-group-box d-flex flex-column align-items-center border px-5 text-muted py-5 rounded fs-5"
                    htmlFor="CvFile"
                  >
                    <img src={upload} alt="upload files" width="80px" />
                    <div className="text-center my-0">
                      Drag and Drop image <p className="text-info d-inline">here</p>
                    </div>
                    <div className="text-center my-0">
                      or <p className="text-info d-inline text-decoration-down">upload</p> image
                    </div>
                  </label>
                </div>
                {/* After Uploading */}
                {user.CvFile && (
                  <div
                    className="upload-container"
                    style={{
                      display: user.CvFile ? "block" : "none",
                      width: "300px",
                      height: "230px",
                      border: "1px solid #dcdcdc",
                      borderRadius: "5px",
                      position: "relative",
                      overflow: "hidden",
                      paddingTop: "30px",
                    }}
                  >
                    <div className="d-flex justify-content-center gap-3 align-items-center px-3">
                      <img src={pdf} alt="Wlaa Card" width="80px" />
                      <div>
                        <p className="p-0 m-0 my-1 fs-5">{user.CvFile.name}</p>
                        <p className="p-0 m-0 my-1 text-muted">
                          {user.CvFile.size > 1024 * 1024
                            ? `${(user.CvFile.size / (1024 * 1024)).toFixed(2)} MB`
                            : `${(user.CvFile.size / 1024).toFixed(2)} KB`}
                        </p>
                      </div>
                      <button
                        type="button"
                        className="btn btn-danger btn-sm py-3 w-100 rounded-0"
                        style={{ position: "absolute", bottom: "0" }}
                        onClick={() => handleDeleteImage("CvFile")}
                      >
                        <i className="fas fa-trash-alt fa-2xl"></i>
                      </button>
                    </div>
                  </div>
                )}
              </div>
            </div>
            <div className="d-flex justify-content-center justify-content-xl-start"></div>
          </div>